name: GitOps Validation with Proper Error Handling

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate-gitops:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install GitOps Validator
      run: |
        go install github.com/moon-hex/gitops-validator@latest
        
    - name: Validate GitOps Repository (Fail on Errors Only)
      id: validate-errors
      run: |
        # Run validation that fails only on errors (default behavior)
        gitops-validator --path . --verbose --fail-on-errors --no-fail-on-warnings --no-fail-on-info
      continue-on-error: false
      
    - name: Validate GitOps Repository (Fail on Warnings Too)
      id: validate-warnings
      run: |
        # Run validation that also fails on warnings
        gitops-validator --path . --verbose --fail-on-errors --fail-on-warnings --no-fail-on-info
      continue-on-error: true
      
    - name: Generate Dependency Chart (Only if validation passes)
      if: steps.validate-errors.outcome == 'success'
      run: |
        # Generate chart only if validation passes
        gitops-validator --path . --chart mermaid --chart-output dependency-chart.md --verbose
        
    - name: Comment PR with Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          let comment = `## 🔍 GitOps Validation Results\n\n`;
          
          // Check validation results
          if ('${{ steps.validate-errors.outcome }}' === 'success') {
            comment += `✅ **Validation Passed**: No errors found in GitOps configuration\n\n`;
            
            // Add chart if available
            try {
              const chart = fs.readFileSync('dependency-chart.md', 'utf8');
              comment += `### 📊 Dependency Chart\n\n`;
              comment += `\`\`\`mermaid\n${chart}\n\`\`\`\n\n`;
            } catch (error) {
              comment += `📊 Dependency chart generation skipped\n\n`;
            }
          } else {
            comment += `❌ **Validation Failed**: Errors found in GitOps configuration\n\n`;
            comment += `Please check the validation output above for details.\n\n`;
          }
          
          // Check warnings
          if ('${{ steps.validate-warnings.outcome }}' === 'failure') {
            comment += `⚠️ **Warnings Found**: Some warnings were detected. Consider addressing them for better GitOps health.\n\n`;
          }
          
          comment += `### Legend\n`;
          comment += `- 🟢 **Green**: Valid resources\n`;
          comment += `- 🔴 **Red**: Broken references\n`;
          comment += `- 🟠 **Orange**: Warnings (deprecated APIs)\n`;
          comment += `- 🔴 **Red**: Orphaned resources\n\n`;
          comment += `> 📊 **Generated by** [gitops-validator](https://github.com/moon-hex/gitops-validator)`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
          
    - name: Upload Artifacts (Only if validation passes)
      if: steps.validate-errors.outcome == 'success'
      uses: actions/upload-artifact@v4
      with:
        name: gitops-validation-results
        path: |
          dependency-chart.md
          
    - name: Fail Job on Validation Errors
      if: steps.validate-errors.outcome == 'failure'
      run: |
        echo "❌ GitOps validation failed with errors. Please fix the issues before merging."
        exit 1