name: GitOps Validation with Per-Entrypoint Charts

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate-gitops:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install GitOps Validator
      run: |
        go install github.com/moon-hex/gitops-validator@latest
        
    - name: Install jq for JSON processing
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
        
    - name: Generate Entrypoint Charts
      id: charts
      run: |
        # Create charts directory
        mkdir -p charts
        
        # Get entry points from configuration
        ENTRYPOINTS=$(gitops-validator --path . --chart json | jq -r '.entryPoints')
        echo "Found $ENTRYPOINTS entry points"
        
        # Generate chart for each entry point
        CHART_FILES=""
        for i in $(seq 0 $((ENTRYPOINTS-1))); do
          ENTRYPOINT_NAME=$(gitops-validator --path . --chart json | jq -r ".entryPoints[$i].name")
          CHART_FILE="charts/entrypoint-$i-$ENTRYPOINT_NAME.md"
          
          echo "Generating chart for entrypoint: $ENTRYPOINT_NAME"
          gitops-validator --path . --chart mermaid --chart-output "$CHART_FILE" --verbose
          
          CHART_FILES="$CHART_FILES $CHART_FILE"
        done
        
        # Set output for next step
        echo "chart_files=$CHART_FILES" >> $GITHUB_OUTPUT
        
    - name: Validate GitOps Repository
      run: |
        gitops-validator --path . --verbose
        
    - name: Comment PR with Entrypoint Charts
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Get chart files from previous step
          const chartFiles = '${{ steps.charts.outputs.chart_files }}'.trim().split(' ').filter(f => f.length > 0);
          
          let comment = `## üîç GitOps Dependency Analysis\n\n`;
          comment += `This PR includes dependency changes across **${chartFiles.length}** entry points:\n\n`;
          
          // Process each chart file
          for (let i = 0; i < chartFiles.length; i++) {
            const chartFile = chartFiles[i];
            const entrypointName = path.basename(chartFile, '.md').replace(/^entrypoint-\d+-/, '');
            
            try {
              const chart = fs.readFileSync(chartFile, 'utf8');
              
              comment += `### üìÅ Entry Point: \`${entrypointName}\`\n\n`;
              comment += `\`\`\`mermaid\n${chart}\n\`\`\`\n\n`;
              
            } catch (error) {
              console.error(`Error reading chart file ${chartFile}:`, error);
              comment += `### üìÅ Entry Point: \`${entrypointName}\`\n\n`;
              comment += `‚ùå Error generating chart for this entry point\n\n`;
            }
          }
          
          comment += `### Legend\n`;
          comment += `- üü¢ **Green**: Valid resources\n`;
          comment += `- üî¥ **Red**: Broken references\n`;
          comment += `- üü† **Orange**: Warnings (deprecated APIs)\n`;
          comment += `- üî¥ **Red**: Orphaned resources\n\n`;
          comment += `> üìä **Charts generated by** [gitops-validator](https://github.com/moon-hex/gitops-validator)`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
          
    - name: Upload Charts as Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: entrypoint-charts
        path: charts/
        
    - name: Create Summary Report
      run: |
        echo "# GitOps Entrypoint Analysis" > analysis-summary.md
        echo "" >> analysis-summary.md
        echo "## Repository Overview" >> analysis-summary.md
        echo "" >> analysis-summary.md
        
        # Add overall statistics
        TOTAL_RESOURCES=$(gitops-validator --path . --chart json | jq -r '.totalResources')
        ENTRY_POINTS=$(gitops-validator --path . --chart json | jq -r '.entryPoints')
        ORPHANED=$(gitops-validator --path . --chart json | jq -r '.orphanedResources')
        
        echo "- **Total Resources**: $TOTAL_RESOURCES" >> analysis-summary.md
        echo "- **Entry Points**: $ENTRY_POINTS" >> analysis-summary.md
        echo "- **Orphaned Resources**: $ORPHANED" >> analysis-summary.md
        echo "" >> analysis-summary.md
        
        # Add each entrypoint chart
        for chart_file in charts/*.md; do
          if [ -f "$chart_file" ]; then
            entrypoint_name=$(basename "$chart_file" .md | sed 's/^entrypoint-[0-9]*-//')
            echo "## Entry Point: $entrypoint_name" >> analysis-summary.md
            echo "" >> analysis-summary.md
            cat "$chart_file" >> analysis-summary.md
            echo "" >> analysis-summary.md
          fi
        done
        
    - name: Upload Analysis Summary
      uses: actions/upload-artifact@v4
      with:
        name: gitops-analysis-summary
        path: analysis-summary.md