name: GitOps Validation with Per-Entrypoint Charts

on:
  pull_request:
    branches: [ main ]

jobs:
  validate-gitops:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install GitOps Validator
      run: |
        go install github.com/moon-hex/gitops-validator@latest
        
    - name: List Entry Points
      id: entrypoints
      run: |
        # Get entry points from the repository
        ENTRYPOINTS=$(gitops-validator --path . --chart json | jq -r '.entryPoints')
        echo "Found $ENTRYPOINTS entry points"
        
        # Create a simple list of entry point names
        ENTRYPOINT_NAMES=""
        for i in $(seq 0 $((ENTRYPOINTS-1))); do
          NAME=$(gitops-validator --path . --chart json | jq -r ".entryPoints[$i].name")
          ENTRYPOINT_NAMES="$ENTRYPOINT_NAMES $NAME"
        done
        
        echo "entrypoint_names=$ENTRYPOINT_NAMES" >> $GITHUB_OUTPUT
        
    - name: Generate Charts for Each Entry Point
      run: |
        # Create charts directory
        mkdir -p charts
        
        # Generate chart for each entry point
        for entrypoint in ${{ steps.entrypoints.outputs.entrypoint_names }}; do
          if [ -n "$entrypoint" ]; then
            echo "Generating chart for entrypoint: $entrypoint"
            gitops-validator --path . --chart mermaid --chart-entrypoint "$entrypoint" --chart-output "charts/$entrypoint.md" --verbose
          fi
        done
        
    - name: Validate GitOps Repository
      run: |
        gitops-validator --path . --verbose
        
    - name: Comment PR with Entrypoint Charts
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          let comment = `## 🔍 GitOps Dependency Analysis\n\n`;
          comment += `This PR shows dependency changes across **${{ steps.entrypoints.outputs.entrypoint_names }}** entry points:\n\n`;
          
          // Read and include each chart file
          const chartFiles = fs.readdirSync('charts').filter(f => f.endsWith('.md'));
          
          for (const chartFile of chartFiles) {
            const entrypointName = path.basename(chartFile, '.md');
            
            try {
              const chart = fs.readFileSync(`charts/${chartFile}`, 'utf8');
              
              comment += `### 📁 Entry Point: \`${entrypointName}\`\n\n`;
              comment += `\`\`\`mermaid\n${chart}\n\`\`\`\n\n`;
              
            } catch (error) {
              console.error(`Error reading chart file ${chartFile}:`, error);
              comment += `### 📁 Entry Point: \`${entrypointName}\`\n\n`;
              comment += `❌ Error generating chart for this entry point\n\n`;
            }
          }
          
          comment += `### Legend\n`;
          comment += `- 🟢 **Green**: Valid resources\n`;
          comment += `- 🔴 **Red**: Broken references\n`;
          comment += `- 🟠 **Orange**: Warnings (deprecated APIs)\n`;
          comment += `- 🔴 **Red**: Orphaned resources\n\n`;
          comment += `> 📊 **Charts generated by** [gitops-validator](https://github.com/moon-hex/gitops-validator)`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
          
    - name: Upload Charts as Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: entrypoint-charts
        path: charts/