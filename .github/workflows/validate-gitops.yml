name: GitOps Validation

# This workflow validates GitOps repositories and provides results as step outputs
# Access validation results using:
# - steps.validation.outputs.exit_code (0 = success, non-zero = failure)
# - steps.validation.outputs.results (full validation output text)
# - jobs.validate.outputs.validation_exit_code (job-level output)
# - jobs.validate.outputs.validation_results (job-level output)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Install dependencies
      run: go mod download
      
    - name: Build validator
      run: go build -o gitops-validator ./main.go
      
    - name: Run validation
      id: validation
      run: |
        echo "Running GitOps validation..."
        ./gitops-validator --path ./ --verbose > validation-results.txt 2>&1
        exit_code=$?
        echo "exit_code=$exit_code" >> $GITHUB_OUTPUT
        
        # Read the results and set as step output
        results=$(cat validation-results.txt)
        echo "results<<EOF" >> $GITHUB_OUTPUT
        echo "$results" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Display validation results
      if: always()
      run: |
        echo "=== GitOps Validation Results ==="
        echo "${{ steps.validation.outputs.results }}"
        echo "=== End of Results ==="
        
    - name: Check validation status
      if: steps.validation.outputs.exit_code != 0
      run: |
        echo "‚ùå GitOps validation failed with exit code ${{ steps.validation.outputs.exit_code }}"
        echo "::error::GitOps validation failed with exit code ${{ steps.validation.outputs.exit_code }}"
        exit ${{ steps.validation.outputs.exit_code }}
        
    - name: Validation passed
      if: steps.validation.outputs.exit_code == 0
      run: |
        echo "‚úÖ GitOps validation passed successfully"
        
    - name: Set job outputs
      if: always()
      run: |
        echo "validation_exit_code=${{ steps.validation.outputs.exit_code }}" >> $GITHUB_OUTPUT
        echo "validation_results<<EOF" >> $GITHUB_OUTPUT
        echo "${{ steps.validation.outputs.results }}" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Upload validation results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: validation-results
        path: |
          validation-results.txt
          gitops-validator
        retention-days: 30
        
    - name: Comment on PR
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const results = `${{ steps.validation.outputs.results }}`;
          const exitCode = `${{ steps.validation.outputs.exit_code }}`;
          
          const comment = `## üîç GitOps Validation Results
          
          <details>
          <summary>Click to view validation output</summary>
          
          \`\`\`
          ${results}
          \`\`\`
          
          </details>
          
          **Status**: ${exitCode === '0' ? '‚úÖ Passed' : '‚ùå Failed'}
          **Exit Code**: ${exitCode || 'Unknown'}
          
          ---
          *This comment was automatically generated by the GitOps validation workflow.*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });